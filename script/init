#!/usr/bin/env bash
# vim:ft=sh:ts=2:sts=2:sw=2:et

set -e

#
# Arguments
#

if [[ -z "${1}" ]]; then
  echo "usage: ${0} [--fast] <server-name> [config-root]"
  exit 1
fi

#
# Variables
#

script_path="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"
root_path="$(cd "${script_path}/.." && pwd)"
easyrsa_path="${root_path}/easyrsa"
pki_path="${root_path}/pki"
server_path="${root_path}/server"
client_path="${root_path}/client"
templates_path="${root_path}/templates"

fast=false
if [[ "${1}" = '-f' || "${1}" == --fast ]]; then
  fast=true
  shift
fi

server_name="${1}"
config_root="${2-/etc/openvpn}"

#
# Template
#

template_vars=("server_name=${server_name}" "config_root=${config_root}")
template_keys='${server_name} ${config_root}'

template() {
  env -i "${template_vars[@]}" envsubst "${template_keys}" < "${1}"
}

#
# Cleanup
#

rm -rf "${easyrsa_path}-git" "${easyrsa_path}" "${pki_path}" "${server_path}" "${client_path}"
mkdir -p "${easyrsa_path}" "${pki_path}" "${server_path}" "${client_path}"

#
# Download & build EasyRSA
#

mkdir -p "${easyrsa_path}-git"
git clone 'https://github.com/OpenVPN/easy-rsa.git' "${easyrsa_path}-git"
cd "${easyrsa_path}-git"
rm -rf ./dist-staging
./build/build-dist.sh --no-windows --no-compress

sed -e '1s:.*:#!/usr/bin/env bash:' \
  ./dist-staging/unix/EasyRSA-git-development/easyrsa \
  > "${easyrsa_path}/easyrsa"
chmod a+x "${easyrsa_path}/easyrsa"
cp -R \
  ./dist-staging/unix/EasyRSA-git-development/x509-types \
  ./dist-staging/unix/EasyRSA-git-development/openssl-easyrsa.cnf \
  "${easyrsa_path}"

cp "${templates_path}/vars" "${pki_path}/vars"

cd "${script_path}"
rm -rf "${easyrsa_path}-git"

#
# Open editor to configure EasyRSA
#

${EDITOR:-vim} "${pki_path}/vars"

#
# Since 3.1 EasyRSA has become a nightmare
#

export EASYRSA_BATCH='true'
mkdir -p "${pki_path}/tmp"

#
# Initialize PKI
#

"${easyrsa_path}/easyrsa" --pki-dir="${pki_path}" init-pki soft

#
# Build certificate authority
#

"${easyrsa_path}/easyrsa" --pki-dir="${pki_path}" build-ca

#
# Issue server certificate
#

"${easyrsa_path}/easyrsa" --pki-dir="${pki_path}" build-server-full server nopass

#
# Generate Diffie-Hellman parameters
#

if [[ "${fast}" = 'true' ]]; then
  openssl dhparam -out "${pki_path}/dh.pem" -dsaparam 4096
else
  "${easyrsa_path}/easyrsa" --pki-dir="${pki_path}" gen-dh
fi

#
# Generate certificate revocation list
#

"${easyrsa_path}/easyrsa" --pki-dir="${pki_path}" gen-crl

#
# Generate shared TLS authentication key
#

openvpn --genkey secret "${pki_path}/ta.key"

#
# Server configuration
#

template "${templates_path}/server.conf" > "${server_path}/server.conf"

#
# Client template
#

template "${templates_path}/client.conf" > "${server_path}/client.conf"
